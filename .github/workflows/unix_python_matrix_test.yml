name: GitHub CI (unix)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pyomo-unix-tests:
    name: ${{ matrix.TARGET }}/py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
        - os: macos-latest
          TARGET: osx
        - os: ubuntu-latest
          TARGET: linux
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        if hash brew; then
            echo "Install pre-dependencies for pyodbc..."
            brew update
            brew list bash || brew install bash
            brew list gcc || brew install gcc
            brew link --overwrite gcc
            brew list pkg-config || brew install pkg-config
            brew list unixodbc || brew install unixodbc
            brew list freetds || brew install freetds
        fi
        echo ""
        echo "Upgrade pip..."
        echo ""
        python -m pip install --upgrade pip
        echo ""
        echo "Install Pyomo dependencies..."
        echo ""
        # Note: pandas 1.0.3 causes gams 29.1.0 import to fail in python 3.8
        pip install cython numpy scipy ipython openpyxl sympy pyyaml \
            pyodbc networkx xlrd pandas matplotlib dill seaborn pymysql \
            pyro4 pint pathos coverage nose
        echo ""
        echo "Install CPLEX Community Edition..."
        echo ""
        pip install cplex || echo "CPLEX Community Edition is not available for ${{ matrix.python-version }}"
        echo ""
        echo "Install GAMS..."
        echo ""
        if hash brew; then
            wget -q https://d37drm4t2jghv5.cloudfront.net/distributions/29.1.0/macosx/osx_x64_64_sfx.exe -O gams_installer.exe
        else
            wget -q https://d37drm4t2jghv5.cloudfront.net/distributions/29.1.0/linux/linux_x64_64_sfx.exe -O gams_installer.exe
        fi
        chmod +x gams_installer.exe
        ./gams_installer.exe -q -d gams
        GAMS_DIR=`ls -d1 $(pwd)/gams/*/ | head -1`
        export PATH=$PATH:$GAMS_DIR
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GAMS_DIR
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$GAMS_DIR
        cd $GAMS_DIR/apifiles/Python/
        py_ver=$(python -c 'import sys;print("%s%s" % sys.version_info[:2])')
        gams_ver=api
        for ver in api_*; do
            if test ${ver:4} -le $py_ver; then
                gams_ver=$ver
            fi
        done
        cd $gams_ver
        python setup.py -q install -noCheck
        echo ""
        echo "Pass key environment variables to subsequent steps"
        echo ""
        echo "::set-env name=PATH::$PATH"
        echo "::set-env name=LD_LIBRARY_PATH::$LD_LIBRARY_PATH"
        echo "::set-env name=DYLD_LIBRARY_PATH::$DYLD_LIBRARY_PATH"

    - name: Install Pyomo and extensions
      run: |
        echo "Clone Pyomo-model-libraries..."
        git clone --quiet https://github.com/Pyomo/pyomo-model-libraries.git
        echo ""
        echo "Install PyUtilib..."
        echo ""
        pip install --quiet git+https://github.com/PyUtilib/pyutilib
        echo ""
        echo "Install Pyomo..."
        echo ""
        python setup.py develop

    - name: Set up coverage tracking
      run: |
        WORKSPACE=`pwd`
        COVERAGE_PROCESS_START=${WORKSPACE}/coveragerc
        echo "::set-env name=COVERAGE_PROCESS_START::$COVERAGE_PROCESS_START"
        cp ${WORKSPACE}/.coveragerc ${COVERAGE_PROCESS_START}
        echo "data_file=${WORKSPACE}/.coverage" >> ${COVERAGE_PROCESS_START}
        SITE_PACKAGES=`python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
        if [ -z "$DISABLE_COVERAGE" ]; then
            echo 'import coverage; coverage.process_startup()' \
                > ${SITE_PACKAGES}/run_coverage_at_startup.pth
        fi

    - name: Download and install extensions
      run: |
        pyomo download-extensions
        pyomo build-extensions

    - name: Run Pyomo tests
      run: |
        echo "Run test.pyomo..."
        test.pyomo -v --cat="nightly" pyomo `pwd`/pyomo-model-libraries

    - name: Upload coverage to codecov
      env:
        GITHUB_JOB_NAME: unix/${{ matrix.TARGET }}/py${{ matrix.python-version }}
      run: |
        find . -maxdepth 10 -name ".cov*"
        coverage combine
        coverage report -i
        bash <(curl -s https://codecov.io/bash) -X gcov -n "$GITHUB_JOB_NAME"
